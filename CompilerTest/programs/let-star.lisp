(defun my-cadr (c) (car (cdr c)))
(defmacro let-star (&body body)
    (let ((bindings (car body)) (real-body (cdr body)))
        (if (null bindings)
            (cons 'progn real-body)
            (let ((f (car bindings)))
                (if (consp f)
                    (list 'let (list (list (car f) (my-cadr f))) (cons 'let-star (cons (cdr bindings) real-body)))
                    (list 'let (list (list f)) (cons 'let-star (cons (cdr bindings) real-body))))))))
(let-star ((i 5) (j (+ i 1))) (writeln i) (writeln j))